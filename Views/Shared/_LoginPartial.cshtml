@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<ul> 
@if (SignInManager.IsSignedIn(User))
{
    <li>
        <p>Signed in as: @User.Identity?.Name</p>
    </li>
    @if (User.IsInRole("Admin"))
    {
        <li>
            <a asp-area="" asp-controller="Home" asp-action="AdminHome">Admin Home</a>
        </li>
    }
    else
    {
        <li>
            <a asp-area="" asp-controller="Home" asp-action="Products">View Cart</a>
        </li>
    }
    <li>
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
    </li>
    <li>
        <form id="logoutForm" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
